# A CI/CD workflow for the Python QR Code application

name: Python application CI/CD

# Controls when the workflow will run.
# This section is critical.
on:
  # Triggers the workflow on push events to the "main" or "master" branch
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab on GitHub
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Sets up Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Step 3: Installs project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Runs tests (Optional, but good practice)
      # If you don't have tests yet, you can comment out or remove this step.
      - name: Test with pytest
        run: |
          pip install pytest
          # This command will look for files named test_*.py or *_test.py
          pytest
        # Use 'continue-on-error' if you don't have tests yet, to prevent failure
        continue-on-error: true

      # Step 5: Logs into Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 6: Builds and pushes the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # This names your Docker image. Make sure it matches your Docker Hub username and repo name.
          push: true
          tags: roddycodes/qrcode_maker:latest
